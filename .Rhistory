library(swirl)
swirl()
View(top_counts)
quit()
library(swirl)
ls
ls()
swirl()
info()
main()
skip()
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
submit()
pack_sum
quantile(pack_sum, probs = 0.99)
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(by_package, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
?chain
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather()
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students, sex_class, value, -grade)
res <- gather(students2, sex_class, value, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, col = sex_class, into= c("sex", "class"))
submit()
students3
submit()
?spread
submit()
extract_numeric("class5")
submit()
?mutate
reset()
submit()
submit()
students4
submit()
?unique
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate( status = "passed")
passed
failed <- failed %>% mutate(status = "failed")
bind_rows(passed, failed)
sat
?separate
submit()
?select
submit()
submit()
quit()
setwd(./GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1)
setwd("./GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1)
setwd("./GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1")
getwd()
# load of packages
library(dplyr)
library(tidyr)
# loading of the file in memory
file <- read.table("household_power_consumption.txt", header=TRUE, sep= ";",
na.strings = "?")
# recasting of each column as its proper data type
# as the file consumes a lot of memory, the variable is removed
# as soon as the step it's used at is finished
file$Date <- as.Date(file$Date, format="%d/%m/%Y")
filtered <- filter(file, file$Date >= as.Date("2007-02-01", format="%Y-%m-%d")
& file$Date <= as.Date("2007-02-02", format="%Y-%m-%d"))
rm("file")
filtered$timetemp <- paste(filtered$Date,filtered$Time)
filtered$Time <- strptime(filtered$timetemp,format="%Y-%m-%d %H:%M:%S")
png(filename="plot1.png", units="px", width=480, height=480)
hist(filtered$Global_active_power, main="Global Active Power", col ="red",
xlab = "Global Active Power (kilowatts)")
dev.off()
# load of packages
library(dplyr)
library(tidyr)
# loading of the file in memory
file <- read.table("household_power_consumption.txt", header=TRUE, sep= ";",
na.strings = "?")
# recasting of each column as its proper data type
# as the file consumes a lot of memory, the variable is removed
# as soon as the step it's used at is finished
file$Date <- as.Date(file$Date, format="%d/%m/%Y")
filtered <- filter(file, file$Date >= as.Date("2007-02-01", format="%Y-%m-%d")
& file$Date <= as.Date("2007-02-02", format="%Y-%m-%d"))
rm("file")
filtered$timetemp <- paste(filtered$Date,filtered$Time)
filtered$Time <- strptime(filtered$timetemp,format="%Y-%m-%d %H:%M:%S")
png(filename="plot1.png", units="px", width=480, height=480)
hist(filtered$Global_active_power, main="Global Active Power", col ="red",
xlab = "Global Active Power (kilowatts)")
dev.off()
